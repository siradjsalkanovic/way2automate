<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="2" total="27" passed="23">
  <reporter-output>
  </reporter-output>
  <suite name="suite" duration-ms="107812" started-at="2017-11-20T14:06:21Z" finished-at="2017-11-20T14:08:09Z">
    <groups>
    </groups>
    <test name="smoketest" duration-ms="107812" started-at="2017-11-20T14:06:21Z" finished-at="2017-11-20T14:08:09Z">
      <class name="smokeTest.SelectAlertsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:smokeTest.SelectAlertsTest@3796751b]" name="setUp" is-config="true" duration-ms="3613" started-at="2017-11-20T15:06:17Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSelectAlerts()[pri:0, instance:smokeTest.SelectAlertsTest@3796751b]" name="testSelectAlerts" duration-ms="451" started-at="2017-11-20T15:08:04Z" finished-at="2017-11-20T15:08:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectAlerts -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:smokeTest.SelectAlertsTest@3796751b]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-11-20T15:08:14Z" finished-at="2017-11-20T15:08:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- smokeTest.SelectAlertsTest -->
      <class name="smokeTest.DroppableTest">
        <test-method status="PASS" signature="testDroppable()[pri:0, instance:smokeTest.DroppableTest@79b4d0f]" name="testDroppable" duration-ms="387" started-at="2017-11-20T15:08:07Z" finished-at="2017-11-20T15:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDroppable -->
      </class> <!-- smokeTest.DroppableTest -->
      <class name="smokeTest.SelectableTest">
        <test-method status="PASS" signature="testSelectableFirstIteration()[pri:0, instance:smokeTest.SelectableTest@2ed94a8b]" name="testSelectableFirstIteration" duration-ms="2112" started-at="2017-11-20T15:07:57Z" finished-at="2017-11-20T15:07:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectableFirstIteration -->
        <test-method status="PASS" signature="testSelectableDisplayAsGrid()[pri:0, instance:smokeTest.SelectableTest@2ed94a8b]" name="testSelectableDisplayAsGrid" duration-ms="95" started-at="2017-11-20T15:07:59Z" depends-on-methods="smokeTest.SelectableTest.testSelectableFirstIteration" finished-at="2017-11-20T15:07:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectableDisplayAsGrid -->
        <test-method status="PASS" signature="testSelectableSecondIteration()[pri:0, instance:smokeTest.SelectableTest@2ed94a8b]" name="testSelectableSecondIteration" duration-ms="3552" started-at="2017-11-20T15:07:59Z" depends-on-methods="smokeTest.SelectableTest.testSelectableDisplayAsGrid" finished-at="2017-11-20T15:08:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectableSecondIteration -->
        <test-method status="PASS" signature="testSelectableTabSerialize()[pri:0, instance:smokeTest.SelectableTest@2ed94a8b]" name="testSelectableTabSerialize" duration-ms="98" started-at="2017-11-20T15:08:03Z" depends-on-methods="smokeTest.SelectableTest.testSelectableSecondIteration" finished-at="2017-11-20T15:08:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectableTabSerialize -->
        <test-method status="PASS" signature="testSelectableThirdIterator()[pri:0, instance:smokeTest.SelectableTest@2ed94a8b]" name="testSelectableThirdIterator" duration-ms="1841" started-at="2017-11-20T15:08:03Z" depends-on-methods="smokeTest.SelectableTest.testSelectableTabSerialize" finished-at="2017-11-20T15:08:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectableThirdIterator -->
      </class> <!-- smokeTest.SelectableTest -->
      <class name="smokeTest.SelectDroppableTest">
        <test-method status="PASS" signature="testSelectDroppable()[pri:0, instance:smokeTest.SelectDroppableTest@3cda1055]" name="testSelectDroppable" duration-ms="1836" started-at="2017-11-20T15:08:06Z" finished-at="2017-11-20T15:08:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectDroppable -->
      </class> <!-- smokeTest.SelectDroppableTest -->
      <class name="smokeTest.FillInLoginTest">
        <test-method status="PASS" signature="testFillInLogin()[pri:0, instance:smokeTest.FillInLoginTest@79698539]" name="testFillInLogin" duration-ms="398" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFillInLogin -->
      </class> <!-- smokeTest.FillInLoginTest -->
      <class name="smokeTest.SelectDatepickerTest">
        <test-method status="PASS" signature="testSelectDatepicker()[pri:0, instance:smokeTest.SelectDatepickerTest@380fb434]" name="testSelectDatepicker" duration-ms="2378" started-at="2017-11-20T15:06:22Z" finished-at="2017-11-20T15:06:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectDatepicker -->
      </class> <!-- smokeTest.SelectDatepickerTest -->
      <class name="smokeTest.SelectSelectableTest">
        <test-method status="PASS" signature="testSelectSelectable()[pri:0, instance:smokeTest.SelectSelectableTest@7a5d012c]" name="testSelectSelectable" duration-ms="795" started-at="2017-11-20T15:07:56Z" finished-at="2017-11-20T15:07:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectSelectable -->
      </class> <!-- smokeTest.SelectSelectableTest -->
      <class name="smokeTest.OpenLoginPopupTest">
        <test-method status="PASS" signature="testOpenLoginPopup()[pri:0, instance:smokeTest.OpenLoginPopupTest@3fb6a447]" name="testOpenLoginPopup" duration-ms="184" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenLoginPopup -->
      </class> <!-- smokeTest.OpenLoginPopupTest -->
      <class name="smokeTest.AlertsTest">
        <test-method status="PASS" signature="readFiles()[pri:0, instance:smokeTest.AlertsTest@6b2fad11]" name="readFiles" is-config="true" duration-ms="1" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFiles -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.AlertsTest@6b2fad11]" name="setup" is-config="true" duration-ms="26" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="readFiles()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="readFiles" is-config="true" duration-ms="0" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFiles -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="setup" is-config="true" duration-ms="8" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.DroppableTest@79b4d0f]" name="setup" is-config="true" duration-ms="2" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="readFiles()[pri:0, instance:smokeTest.FillInLoginTest@79698539]" name="readFiles" is-config="true" duration-ms="1" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readFiles -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.FillInLoginTest@79698539]" name="setup" is-config="true" duration-ms="1" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.OpenLoginPopupTest@3fb6a447]" name="setup" is-config="true" duration-ms="1" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.SelectAlertsTest@3796751b]" name="setup" is-config="true" duration-ms="3" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.SelectSelectableTest@7a5d012c]" name="setup" is-config="true" duration-ms="1" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.SelectDatepickerTest@380fb434]" name="setup" is-config="true" duration-ms="0" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.SelectDroppableTest@3cda1055]" name="setup" is-config="true" duration-ms="0" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.SelectSliderTest@38082d64]" name="setup" is-config="true" duration-ms="0" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.SliderTest@668bc3d5]" name="setup" is-config="true" duration-ms="2" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:smokeTest.SelectableTest@2ed94a8b]" name="setup" is-config="true" duration-ms="0" started-at="2017-11-20T15:06:21Z" finished-at="2017-11-20T15:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAlertsShowFirstAlert()[pri:0, instance:smokeTest.AlertsTest@6b2fad11]" name="testAlertsShowFirstAlert" duration-ms="369" started-at="2017-11-20T15:08:05Z" finished-at="2017-11-20T15:08:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertsShowFirstAlert -->
        <test-method status="PASS" signature="testAlertsAcceptAlert()[pri:0, instance:smokeTest.AlertsTest@6b2fad11]" name="testAlertsAcceptAlert" duration-ms="184" started-at="2017-11-20T15:08:05Z" depends-on-methods="smokeTest.AlertsTest.testAlertsShowFirstAlert" finished-at="2017-11-20T15:08:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertsAcceptAlert -->
        <test-method status="FAIL" signature="testAlertsTabInputAlert()[pri:0, instance:smokeTest.AlertsTest@6b2fad11]" name="testAlertsTabInputAlert" duration-ms="114" started-at="2017-11-20T15:08:05Z" depends-on-methods="smokeTest.AlertsTest.testAlertsAcceptAlert" finished-at="2017-11-20T15:08:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at smokeTest.AlertsTest.testAlertsTabInputAlert(AlertsTest.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertsTabInputAlert -->
        <test-method status="SKIP" signature="testAlertsInsertText()[pri:0, instance:smokeTest.AlertsTest@6b2fad11]" name="testAlertsInsertText" duration-ms="0" started-at="2017-11-20T15:08:06Z" depends-on-methods="smokeTest.AlertsTest.testAlertsShowSecondAlert" finished-at="2017-11-20T15:08:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertsInsertText -->
        <test-method status="SKIP" signature="testAlertsShowSecondAlert()[pri:0, instance:smokeTest.AlertsTest@6b2fad11]" name="testAlertsShowSecondAlert" duration-ms="0" started-at="2017-11-20T15:08:06Z" depends-on-methods="smokeTest.AlertsTest.testAlertsTabInputAlert" finished-at="2017-11-20T15:08:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertsShowSecondAlert -->
      </class> <!-- smokeTest.AlertsTest -->
      <class name="smokeTest.DatepickerTest">
        <test-method status="PASS" signature="testFillDatePicker()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testFillDatePicker" duration-ms="30370" started-at="2017-11-20T15:06:24Z" finished-at="2017-11-20T15:06:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFillDatePicker -->
        <test-method status="PASS" signature="testSelTabAnimations()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testSelTabAnimations" duration-ms="128" started-at="2017-11-20T15:06:54Z" depends-on-methods="smokeTest.DatepickerTest.testFillDatePicker" finished-at="2017-11-20T15:06:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelTabAnimations -->
        <test-method status="PASS" signature="testTabAnimationsCommands()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testTabAnimationsCommands" duration-ms="30533" started-at="2017-11-20T15:06:55Z" depends-on-methods="smokeTest.DatepickerTest.testSelTabAnimations" finished-at="2017-11-20T15:07:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTabAnimationsCommands -->
        <test-method status="PASS" signature="testTabDisplayMonthAndYear()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testTabDisplayMonthAndYear" duration-ms="121" started-at="2017-11-20T15:07:25Z" depends-on-methods="smokeTest.DatepickerTest.testTabAnimationsCommands" finished-at="2017-11-20T15:07:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTabDisplayMonthAndYear -->
        <test-method status="PASS" signature="testTabDisplayMonthAndYearCommands()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testTabDisplayMonthAndYearCommands" duration-ms="30183" started-at="2017-11-20T15:07:25Z" depends-on-methods="smokeTest.DatepickerTest.testTabDisplayMonthAndYear" finished-at="2017-11-20T15:07:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTabDisplayMonthAndYearCommands -->
        <test-method status="PASS" signature="testSelTabFormatDate()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testSelTabFormatDate" duration-ms="121" started-at="2017-11-20T15:07:55Z" depends-on-methods="smokeTest.DatepickerTest.testTabDisplayMonthAndYearCommands" finished-at="2017-11-20T15:07:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelTabFormatDate -->
        <test-method status="PASS" signature="testTabFormatDateCommands()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testTabFormatDateCommands" duration-ms="311" started-at="2017-11-20T15:07:55Z" depends-on-methods="smokeTest.DatepickerTest.testSelTabFormatDate" finished-at="2017-11-20T15:07:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTabFormatDateCommands -->
        <test-method status="FAIL" signature="testShowDatePicker()[pri:0, instance:smokeTest.DatepickerTest@73f792cf]" name="testShowDatePicker" duration-ms="184" started-at="2017-11-20T15:07:56Z" depends-on-methods="smokeTest.DatepickerTest.testTabFormatDateCommands" finished-at="2017-11-20T15:07:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Date Picker not visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Date Picker not visible expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at smokeTest.DatepickerTest.testShowDatePicker(DatepickerTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowDatePicker -->
      </class> <!-- smokeTest.DatepickerTest -->
      <class name="smokeTest.SliderTest">
        <test-method status="PASS" signature="testSlider()[pri:0, instance:smokeTest.SliderTest@668bc3d5]" name="testSlider" duration-ms="329" started-at="2017-11-20T15:08:08Z" finished-at="2017-11-20T15:08:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSlider -->
      </class> <!-- smokeTest.SliderTest -->
      <class name="smokeTest.SelectSliderTest">
        <test-method status="PASS" signature="testSelectDroppable()[pri:0, instance:smokeTest.SelectSliderTest@38082d64]" name="testSelectDroppable" duration-ms="665" started-at="2017-11-20T15:08:08Z" finished-at="2017-11-20T15:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectDroppable -->
      </class> <!-- smokeTest.SelectSliderTest -->
    </test> <!-- smoketest -->
  </suite> <!-- suite -->
</testng-results>
